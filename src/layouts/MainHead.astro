---
const { title, seoDesc, ogImage, url, domain, keywords } = Astro.props;
import { ViewTransitions } from 'astro:transitions';
---

<head>
  <meta charset='utf-8' />
  <meta name='robots' content='index, follow' />
  <meta name='viewport' content='width=device-width, initial-scale=1.0' />
  <title>{title}</title>
  <meta name='description' content={seoDesc} />
  <meta name='keywords' content={keywords} />
  <meta name='author' content='Rifky Alamsyah' />
  <!-- og fb -->
  <meta property='og:url' content={url} />
  <meta property='og:type' content='website' />
  <meta property='og:title' content={title} />
  <meta property='og:description' content={seoDesc} />
  <meta property='og:image' content={ogImage} />
  <!-- og x -->
  <meta name='twitter:card' content='summary_large_image' />
  <meta property='twitter:domain' content={domain} />
  <meta property='twitter:url' content={url} />
  <meta name='twitter:title' content={title} />
  <meta name='twitter:description' content={seoDesc} />
  <meta name='twitter:image' content={ogImage} />
  <!-- favicon -->
  <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
  <!-- Google Tag Manager -->
  <script is:inline>
    (function (w, d, s, l, i) {
      w[l] = w[l] || [];
      w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' });
      var f = d.getElementsByTagName(s)[0],
        j = d.createElement(s),
        dl = l != 'dataLayer' ? '&l=' + l : '';
      j.async = true;
      j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
      f.parentNode.insertBefore(j, f);
    })(window, document, 'script', 'dataLayer', 'GTM-NKD2W7FQ');
  </script>
  <!-- End Google Tag Manager -->
  <!-- gfonts -->
  <link rel='preconnect' href='https://fonts.googleapis.com' />
  <link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
  <link
    href='https://fonts.googleapis.com/css2?family=DM+Sans:opsz,wght@9..40,100;9..40,200;9..40,300;9..40,400;9..40,500;9..40,600;9..40,700;9..40,800;9..40,900&display=swap'
    rel='stylesheet'
  />
  <script is:inline>
    const setDarkMode = () => {
      if (
        localStorage.theme === 'dark' ||
        (!('theme' in localStorage) &&
          window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
    };
    setDarkMode();
    document.addEventListener('astro:after-swap', setDarkMode);
  </script>
  <ViewTransitions />
</head>
