---
import Layout from '@layouts/MainLayout.astro';
import IconBack from '@icons/caret-left.astro';
import BackTo from '@components/navigation/Back.astro';
import Badge from '@components/blog/BadgeLg.astro';

import { formatDate } from '../../utils';
import { Picture } from 'astro:assets';

import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const allBlogPost: CollectionEntry<'blog'>[] = await getCollection('blog');

  return allBlogPost.map((entry) => ({
    params: {
      slug: entry.slug,
    },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// SEO
const title = `${entry.data.title} - Rifky Alamsyah`;
const seoDesc = `Read - ${entry.data.title}`;
const ogImage = `https://rifkyalamsyah.github.io${entry.data.imageUrl}`;
const url = `https://rifkyalamsyah.github.io/blog/${entry.slug}`;
const domain = `rifkyalamsyah.github.io/blog/${entry.slug}`;
---

<Layout {title} {seoDesc} {ogImage} {url} {domain}>
  <div class='container mx-auto'>
    <div class='my-4 flex'>
      <BackTo href='/blog' name='Back' />
    </div>
    <hr class='border-dark-100/80 dark:border-dark-800/20 duration-1000' />

    <article
      class='mt-8 mx-auto prose lg:prose-xl dark:prose-invert prose-img:rounded-xl prose-a:no-underline hover:prose-a:underline prose-headings:text-dark-900 dark:prose-headings:text-dark-100 prose-headings:mb-4 prose-p:my-4 prose-img:my-6 prose-p:text-dark-800 dark:prose-p:text-dark-300 prose-blockquote:text-base prose-blockquote:text-dark-800 prose-blockquote:border-l-dark-300 dark:prose-blockquote:border-l-dark-800 marker:text-dark-400 dark:marker:text-dark-400 dark:prose-blockquote:text-dark-300 prose-pre:!bg-[#23262F] dark:prose-pre:!bg-[#23262F] prose-hr:border-dark-100/80 dark:prose-hr:border-dark-800/40 prose-h1:text-4xl prose-h2:text-3xl prose-h3:text-2xl prose-h4:text-xl prose-p:text-lg prose-li:text-lg prose-ol:my-4 prose-ul:my-4 prose-figcaption:text-base duration-700'
    >
      <div class='flex justify-center'>
        <Badge value={entry.data.category} />
      </div>
      <h1 class='text-center'>{entry.data.title}</h1>
      <p class='text-center'>
        {formatDate(entry.data.pubDate)} - {entry.data.readingTime}
      </p>
      <Picture
        src={entry.data.image}
        alt={entry.data.title}
        formats={['avif', 'webp']}
      />
      <Content />
    </article>
  </div>
</Layout>
